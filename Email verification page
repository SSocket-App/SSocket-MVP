// EmailVerification.js — shows the EXACT email from your previous screen
// Expects: route.params.email (string)

import React, { useEffect, useState } from "react";
import {
  SafeAreaView,
  StatusBar,
  View,
  Text,
  TouchableOpacity,
  StyleSheet,
  Platform,
} from "react-native";
import { Ionicons } from "@expo/vector-icons";

const YELLOW = "#FFD54A";
const BLACK = "#000";
const WHITE = "#FFF";

export default function EmailVerification({ route, navigation }) {
  const email = route?.params?.email || ""; // <-- EXACT email from prior screen

  const COOLDOWN = 30; // seconds after tapping "Resend"
  const [left, setLeft] = useState(0);
  const [sending, setSending] = useState(false);

  useEffect(() => {
    if (left <= 0) return;
    const t = setInterval(() => setLeft((s) => (s > 0 ? s - 1 : 0)), 1000);
    return () => clearInterval(t);
  }, [left]);

  const handleResend = async () => {
    if (left > 0 || sending) return;
    try {
      setSending(true);
      // TODO: call your API to resend to `email`
      // await api.auth.resendVerification({ email });
      setLeft(COOLDOWN);
    } finally {
      setSending(false);
    }
  };

  const handleContinue = () => {
    // User tapped the link in the email already
    // TODO: poll/verify on server, then navigate forward
    // e.g., navigation.replace("Onboarding");
  };

  const handleChangeEmail = () => {
    // Go back to edit email
    navigation.goBack();
  };

  return (
    <SafeAreaView style={styles.container}>
      <StatusBar barStyle="light-content" backgroundColor={BLACK} />

      {/* Header */}
      <View style={styles.topBar}>
        <Text style={styles.topBarTitle}>Verify your email</Text>
      </View>
      <View style={styles.topAccent} />

      {/* Body */}
      <View style={styles.body}>
        {/* Big mail icon */}
        <View style={styles.iconWrap}>
          <Ionicons name="mail-outline" size={64} color={BLACK} />
        </View>

        <Text style={styles.title}>Check your inbox</Text>
        <Text style={styles.subtitle}>
          We sent a verification link to
        </Text>

        {/* EXACT email shown here */}
        <Text style={styles.emailBox}>{email}</Text>

        {/* Primary: I’ve verified */}
        <TouchableOpacity
          style={styles.primaryBtn}
          activeOpacity={0.9}
          onPress={handleContinue}
        >
          <Text style={styles.primaryBtnTxt}>I’ve verified, continue</Text>
        </TouchableOpacity>

        {/* What to do instructions */}
        <View style={styles.instructionsBox}>
          <Text style={styles.instructionsTitle}>What to do next</Text>

          <Text style={styles.bullet}>
            • If you <Text style={styles.bold}>got the email</Text>: open it and tap the verification link, then return here and press <Text style={styles.bold}>“I’ve verified, continue.”</Text>
          </Text>

          <Text style={[styles.bullet, { marginTop: 8 }]}>
            • If you <Text style={styles.bold}>didn’t get it</Text>: wait 1–2 minutes, check <Text style={styles.bold}>Spam/Junk/Promotions</Text>, search your inbox for <Text style={styles.bold}>“SSocket”</Text>, then tap <Text style={styles.bold}>Resend</Text> below. If your email is wrong, tap <Text style={styles.bold}>Change email</Text>.
          </Text>
        </View>

        {/* Resend row */}
        <View style={styles.resendRow}>
          <Text style={styles.resendHint}>Didn’t get the email?</Text>
          <TouchableOpacity
            onPress={handleResend}
            activeOpacity={left > 0 || sending ? 1 : 0.9}
            style={[styles.resendBtn, (left > 0 || sending) && { opacity: 0.5 }]}
            disabled={left > 0 || sending}
          >
            <Text style={styles.resendTxt}>
              {left > 0 ? `Resend in ${left}s` : "Resend"}
            </Text>
          </TouchableOpacity>
        </View>

        {/* Change email */}
        <TouchableOpacity
          onPress={handleChangeEmail}
          activeOpacity={0.9}
          style={styles.changeEmailBtn}
        >
          <Ionicons name="create-outline" size={18} color={BLACK} />
          <Text style={styles.changeEmailTxt}>Change email</Text>
        </TouchableOpacity>
      </View>
    </SafeAreaView>
  );
}

/* -------------------- Styles (matches your app) -------------------- */
const styles = StyleSheet.create({
  container: { flex: 1, backgroundColor: WHITE },

  topBar: {
    backgroundColor: BLACK,
    height: 88,
    paddingTop: Platform.OS === "android" ? (StatusBar.currentHeight || 0) : 12,
    alignItems: "center",
    justifyContent: "flex-end",
    paddingBottom: 14,
  },
  topBarTitle: { color: WHITE, fontSize: 22, fontWeight: "900" },
  topAccent: { height: 3, backgroundColor: YELLOW },

  body: { flex: 1, paddingHorizontal: 16, paddingTop: 20 },

  iconWrap: {
    width: 96, height: 96, borderRadius: 20,
    borderWidth: 2, borderColor: BLACK, backgroundColor: WHITE,
    alignItems: "center", justifyContent: "center", alignSelf: "center",
  },
  title: { marginTop: 16, fontSize: 22, fontWeight: "900", color: BLACK, textAlign: "center" },
  subtitle: { marginTop: 6, fontSize: 14, color: BLACK, textAlign: "center" },

  emailBox: {
    marginTop: 8,
    alignSelf: "center",
    borderWidth: 2,
    borderColor: BLACK,
    borderRadius: 12,
    paddingVertical: 10,
    paddingHorizontal: 14,
    fontSize: 14,
    fontWeight: "900",
    color: BLACK,
    backgroundColor: "#FFFDF2",
  },

  primaryBtn: {
    marginTop: 18,
    backgroundColor: YELLOW,
    borderRadius: 12,
    borderWidth: 2,
    borderColor: BLACK,
    paddingVertical: 14,
    alignItems: "center",
  },
  primaryBtnTxt: { color: BLACK, fontWeight: "900", fontSize: 16 },

  instructionsBox: {
    marginTop: 16,
    borderWidth: 2,
    borderColor: BLACK,
    borderRadius: 12,
    padding: 12,
    backgroundColor: WHITE,
  },
  instructionsTitle: { fontWeight: "900", color: BLACK, marginBottom: 6 },
  bullet: { color: BLACK, fontSize: 12, lineHeight: 18 },
  bold: { fontWeight: "900" },

  resendRow: {
    flexDirection: "row",
    justifyContent: "center",
    alignItems: "center",
    gap: 10,
    marginTop: 14,
  },
  resendHint: { fontSize: 12, color: BLACK },
  resendBtn: {
    borderWidth: 2,
    borderColor: BLACK,
    borderRadius: 10,
    paddingVertical: 6,
    paddingHorizontal: 10,
    backgroundColor: WHITE,
  },
  resendTxt: { fontSize: 12, color: BLACK, fontWeight: "900" },

  changeEmailBtn: {
    alignSelf: "center",
    marginTop: 16,
    flexDirection: "row",
    gap: 6,
    alignItems: "center",
    borderWidth: 2,
    borderColor: BLACK,
    borderRadius: 10,
    paddingVertical: 8,
    paddingHorizontal: 10,
    backgroundColor: WHITE,
  },
  changeEmailTxt: { fontSize: 12, color: BLACK, fontWeight: "900" },
});
